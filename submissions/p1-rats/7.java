static void f(String scene,int e){Integer c=1;String[]g=scene.split("\n");LinkedHashMap<Integer,Integer>[]h=new LinkedHashMap[10];h[4]=new LinkedHashMap<Integer,Integer>();for(int i=0;i<g.length;i++)
{int a=i;if(i>=4){a=i+1;}h[a]=new LinkedHashMap<Integer,Integer>();int f=g.length-i-1;String[]p=(g[f]).split("\\|");for(String s:p){if(!s.isEmpty()){String[]pas=s.split(":");h[a].put(Integer.parseInt(pas[1]),Integer.parseInt(pas[0]));}}}int p=g.length-1;if(p>=4){p++;}Map<Integer,Integer>m=new HashMap();boolean l=true;Integer o=0;boolean b=true;boolean up=true;int j=0;Integer s=-1;while(b==true){Map<Integer,Integer>t=new HashMap<>();if(o==p||o==0&&l==false){up=!up;}Integer u=m.get(o);if(u==null){u=0;}c=Math.max(c-u,1);j=Math.max(j,o);m.remove(o);if(u>0||l==true){s++;boolean change=true;for(Map.Entry<Integer,Integer>entry:h[o].entrySet()){boolean fel=entry.getKey()-o>0;if(fel==up){change=false;}}if(up==true&&change&&j>o){up=!up;}for(Map.Entry<Integer,Integer>entry:h[o].entrySet()){boolean fel=entry.getKey()-o>0;if(fel==up){c=c+entry.getValue();Integer d=m.get(entry.getKey());if(d==null){d=0;}m.put(entry.getKey(),d+entry.getValue());j=Math.max(j,entry.getValue());t.put(entry.getKey(),entry.getValue());}}}
if((e<c)){System.out.print("polite after "+s+" stops at "+o+" floor");b=false;}if(c==1&&l==false){System.out.print("lonely after "+s+" stops at "+o+" floor");b=false;}for(Map.Entry<Integer,Integer>stf:t.entrySet()){h[o].remove(stf.getKey());}if(up){o=o+1;}else{o=o-1;}l=false;}}