static void f(String a,int b){String[] c=a.split("\\n");String[][] d=new String[c.length][];for(int i=0;i<c.length;i++){String e=c[i];d[i]=e.split("\\|");}int f=1;int g=0;int h=1;int i=-1;int[] j=new int[d.length];boolean k=true;while(a.length()>0){if(j[g]!=0||k){i++;String[] l=d[d.length-1-g];f=m(f,g,h,j,l);if(!n(g,h,j)){h*=-1;f=m(f,g,h,j,l);}f-=j[g];j[g]=0;}String o=i+" stops at "+(g>3?g+1:g)+" floor";if(f>b){System.out.println("polite after "+o);break;}if(f==1&&!k){System.out.println("lonely after "+o);break;}k=false;g+=h;}}
static int m(int a,int b,int c,int[] d,String[] e){for(int j = 0; j<e.length; j++){String[] f=e[j].split(":");if(f.length>1){int g=Integer.parseInt(f[1]);if(g>3){g--;}int h=Integer.parseInt(f[0]);if((g-b)*c>0){a+=h;d[g]+=h;e[j]="";}}}return a;}
static boolean n(int a,int b,int[]c){int d=a+b;if(b>0){for(int i = d; i<c.length; i+=b){if(c[i]!=0)return true;}}else{for(int i = d; i>=0; i+=b){if(c[i]!=0)return true;}}return false;}