static void f(String b) {String[] f= b.split("\n");LinkedList<L> c=new LinkedList<L>(),p=new LinkedList<L>(),m=new LinkedList<L>(),t=new LinkedList<L>();LinkedList<LinkedList<L>> l=new LinkedList<>();int i=0,j=0;for(;i<f.length;i++)for(j=0;j<f[i].length();j++){char ca=f[i].charAt(j);switch(ca){case 'v':X(c,l,i,j,1,0);break;case '>':X(c,l,i,j,0,1);break;case '<':X(c,l,i,j,0,-1);break;case '^':X(c,l,i,j,-1,0);break;case '#':c.add(L.c(i,j,0,0));break;case '@':t.add(L.c(i,j,0,0));break;case '\\':m.add(L.c(i,j,1,0));break;case '/':m.add(L.c(i,j,-1,0));break;case '0':case '1':case '2':case '3':case '4':case '5':case '6':case '7':case '8':case '9':p.add(L.c(i, j, Integer.valueOf(f[i].charAt(j)), 0));break;}}for (LinkedList<L> q : l) {while(true) {L ro=q.getLast();L r=L.c(ro.x, ro.y, ro.h, ro.w);r.M=ro.M;r.x+=r.h;r.y+=r.w;if(r.M==1) q.removeLast(); r.M=0;if(r.x>=i||r.y>=j) break;if(r.x<0||r.y<0) break;if(c.stream().anyMatch(s->s.x==r.x&&s.y==r.y)) break;if(t.stream().anyMatch(s->s.x==r.x&&s.y==r.y)) {t.stream().filter(s->s.x==r.x&&s.y==r.y).forEach(s->s.h=1);break;}cm(m, r);cp(p, r);q.addLast(r);}}String r="";if(l.stream().anyMatch(s -> s.stream().anyMatch(z -> l.stream().anyMatch(u -> u.stream().anyMatch(a -> s!=u&&a.x==z.x&&a.y==z.y))))) r=":/";else if(t.stream().allMatch(s->s.h>0)) r=":D";else r=":(";System.out.println(r);}private static void X(LinkedList<L> c, LinkedList<LinkedList<L>> l, int i,int j,int k,int K) {c.add(L.c(i, j, 0, 0));{LinkedList<L> x=new LinkedList<>();x.add(L.c(i, j, k, K));l.add(x);}}static void cp(LinkedList<L> p, L r) {Optional<L> w = p.stream().filter(s->s.x==r.x&&s.y==r.y).findFirst();if(w.isPresent()) {L v=w.get();p.stream().filter(s->s.h==v.h&&s!=v).forEach(s->{r.x=s.x;r.y=s.y;});r.M=1;}}static void cm(LinkedList<L> m, L r) {m.stream().filter(s->s.x==r.x&&s.y==r.y).forEach(s-> {s.w=r.w;r.w=r.h*s.h;r.h=s.w*s.h;r.M=1;});}static class L{int x,y,h,w,M;static L c(int x,int y,int h,int w) {L l = new L();l.x=x;l.y=y;l.h=h;l.w=w;return l;}}