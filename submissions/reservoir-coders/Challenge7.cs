static void f(string s,int C){var F=s.Split('\n').Reverse();var J=new Dictionary<int,Dictionary<int,int>>();int c=0,S=0,E=0;var G=true;foreach(var f in F){if(c==4){J[c]=new Dictionary<int,int>();c++;}J[c]=new Dictionary<int,int>();for(int i=0;i<F.Count()+((F.Count()>4)?1:0);i++){var p=0;if(f.Trim().Length>0){var P=f.Split('|').ToDictionary(x=>int.Parse(x.Split(':')[1]),x=>int.Parse(x.Split(':')[0]));if(P.ContainsKey(i))p=P[i];if(i==c&&p>0)p=0;}J[c].Add(i,p);}c++;}var B=J.Select(i=>new KeyValuePair<int,IEnumerable<KeyValuePair<int,int>>>(i.Key,i.Value));var L=new Dictionary<int,int>();string _;for(;;){int M=B.Select(q=>q.Key).Max();bool U=G;G=E==0||G&&(E!=M&&L.Where(q=>q.Value>0).Select(q=>q.Key).Union(new[] {0}).Max()>E);var Q=L.Where(q=>q.Key!=E).ToDictionary(q=>q.Key,q=>q.Value);if(S>0&&Q.Sum(x=>x.Value)==L.Sum(x=>x.Value)){E+=(G?1:-1);continue;}var I=B.ToDictionary(k=>k.Key,k=>k.Value.ToDictionary(j=>j.Key,j=>j.Value));var Z=B.First(k=>k.Key==E).Value;G|=(U&&Z.Any(w=>(w.Key>E&&w.Value>0)));foreach(var d in Z.Where(w=>(w.Key>E&&G)||(w.Key<E&&!G))){var D=d.Key;if(!Q.ContainsKey(D))Q.Add(D,0);Q[D]+=d.Value;I[E][D]-=d.Value;}var H=Q.Sum(x=>x.Value);_=" after "+S+" stops at "+E+" floor";if(C<1+H){_="polite"+_;break;}if(0==H){_="lonely"+_;break;}S++;E+=(G?1:-1);B=I.Select(i=>new KeyValuePair<int,IEnumerable<KeyValuePair<int,int>>>(i.Key,i.Value));L=Q;}Console.Write(_);}